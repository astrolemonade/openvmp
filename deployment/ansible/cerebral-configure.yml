---
- name: Configure NUC for OpenVMP
  hosts: openvmp-nuc
  gather_facts: yes

  tasks:
    # OS configuration
    - name: Configure the moto
      ansible.builtin.lineinfile:
        path: /root/.bashrc
        line: "echo 'Welcome to OpenVMP. Use Ansible for any mutable changes.'"
        create: true
    - name: Limit journald total disk use
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        line: "SystemMaxUse=100M"
        create: false
    - name: Limit journald single file size
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        line: "SystemMaxFileSize=10M"
        create: false
    - name: Minimize disk usage on syslog
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        line: "MaxLevelStore=notice"
        create: false
    - name: Disable unattended upgrades to be in control
      ansible.builtin.apt:
        pkg:
          - unattended-upgrades
        state: absent
    - name: Installing and updating system packages
      ansible.builtin.apt:
        pkg:
          - net-tools
          - curl
          - socat
          - git
          - gnupg
          - lsb-release
        update_cache: true
        state: present
    - name: Global sysctl configuration
      ansible.builtin.copy:
        dest: /etc/sysctl.d/999-openvmp.conf
        content: |
          net.ipv4.ipfrag_time = 3
          net.core.rmem_max = 4194304
    - name: Disable Avahi daemon to reduce noise
      ansible.builtin.systemd:
        name: avahi-daemon
        state: stopped
        enabled: false

    # Install ROS2
    - name: Installing and updating system packages for ROS2
      ansible.builtin.apt:
        pkg:
          - software-properties-common
        update_cache: false
        state: present
    - name: Add repository universe
      shell: add-apt-repository universe -y
    - name: Add ROS2 repo key
      ansible.builtin.apt_key:
        url: https://raw.githubusercontent.com/ros/rosdistro/master/ros.key
        state: present
    - name: Add ROS2 repo
      ansible.builtin.apt_repository:
        repo: deb http://packages.ros.org/ros2/ubuntu {{ ansible_distribution_release }} main
        state: present
    - name: Installing and updating ROS2 packages
      ansible.builtin.apt:
        pkg:
          - ros-humble-desktop-full
          - ros-humble-ros2-control
          - ros-humble-ros2-controllers
          - python3-colcon-common-extensions
          - ros-humble-camera-calibration-parsers
          - v4l2loopback-utils
          - ros-humble-robot-localization
        update_cache: false
        state: present

    # Install Coral AI
    - name: Add Coral AI repo key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: Add Coral AI repo
      ansible.builtin.apt_repository:
        repo: deb https://packages.cloud.google.com/apt coral-edgetpu-stable main
        state: present
    - name: Downloading pycoral for Python 3.10
      ansible.builtin.get_url:
        url: https://github.com/hjonnala/snippets/raw/main/wheels/python3.10/pycoral-2.0.0-cp310-cp310-linux_x86_64.whl
        dest: /tmp
    - name: Downloading tflite_runtime for Python 3.10
      ansible.builtin.get_url:
        url: https://github.com/hjonnala/snippets/raw/main/wheels/python3.10/tflite_runtime-2.5.0.post1-cp310-cp310-linux_x86_64.whl
        dest: /tmp
    - name: Install the downloaded Python packages for Coral AI
      ansible.builtin.pip:
        name:
          - file:///tmp/pycoral-2.0.0-cp310-cp310-linux_x86_64.whl
          - file:///tmp/tflite_runtime-2.5.0.post1-cp310-cp310-linux_x86_64.whl
    - name: Installing and updating Coral AI packages
      ansible.builtin.apt:
        pkg:
          - libedgetpu1-std
          - libtorch-dev
          - python3-torch
          - edgetpu-compiler
          - libedgetpu-dev
          - gasket-dkms # TODO(clarbee): add logic to set secureboot password
        update_cache: false
        state: present
    - name: Add the gasket module
      community.general.modprobe:
        name: gasket
        state: present
    - name: Add the apex module
      community.general.modprobe:
        name: apex
        state: present
    - name: Make TPU drivers load on boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/openvmp-tpu.conf
        content: >
          gasket
          apex
        force: false

    # FIXME(clairbee): remove duplication of the config to setup the source code tree

    # Robot source code
    - name: Creating source code repositories on the targets
      shell: git init openvmp
      args:
        creates: openvmp/.git
      changed_when: False
    - name: Creating source code repositories on the targets
      shell: git config --bool --add receive.denyCurrentBranch true
      args:
        chdir: openvmp
      changed_when: False
    - name: Registering the target repository in the local repository
      command: git remote add target-{{ inventory_hostname }} {{ inventory_hostname }}:openvmp
      args:
        # The documentation suggests to run ansible in the current directory only.
        chdir: ../..
        creates: .git/refs/remotes/target-{{ inventory_hostname }}
      ignore_errors: yes
      become: no
      changed_when: False
      delegate_to: localhost
    # TODO(clairbee): consider dropping the below from 'configure.yml'
    - name: Temporary move to another branch
      shell: git checkout -b tmp
      args:
        chdir: openvmp
        creates: .git/refs/heads/tmp
    - name: Pushing source code changes to the targets
      shell: git push target-{{ inventory_hostname }}
      become: no
      changed_when: False
      delegate_to: localhost
    - name: Delete the temporary branch
      shell: git checkout main && git branch -d tmp
      args:
        chdir: openvmp
        removes: .git/refs/heads/tmp
    - name: Checking out or updating the submodules if necessary
      shell: git submodule update --recursive --init
      args:
        chdir: openvmp
        # TODO(clairbee): creates: List all submodules here
      environment:
        GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

    # Robot configuration
    - name: Create the folder to persist configuration
      ansible.builtin.file:
        path: /root/.openvmp
        state: directory
        mode: "0755"
    - name: Give this robot a name
      ansible.builtin.copy:
        dest: /root/.openvmp/id
        content: "{{ lookup('community.general.random_string', upper=true, lower=false, numbers=false, special=false, length=1) }}{{ lookup('community.general.random_string', upper=true, lower=false, numbers=true, special=false, length=3) }}"
        force: false
    - name: Helper script to set the environment variables
      ansible.builtin.copy:
        dest: /root/.openvmp/env.sh
        src: ../shared/files/env.sh
        mode: 0755
    - name: Set the environment variables on each login session
      ansible.builtin.lineinfile:
        path: /root/.bashrc
        line: source /root/.openvmp/env.sh
        create: true
